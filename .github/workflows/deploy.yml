name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    working-directory: docs
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.144.1
      extended: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Print working directory before build
        run: |
          echo "Current directory: $(pwd)"
          ls -la

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Hugo mod tidy
        run: hugo mod tidy

      # Azione consigliata da GitHub per inizializzare l'ambiente Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Se hai un package.json puoi installare le dipendenze Node,
      # altrimenti non serve
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --gc --minify --destination ./public --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: "Debug: List public folder after build"
        run: |
          echo "Listing contents of ./public:"
          ls -la ./public

      # Invece di upload-artifact@v4, usiamo upload-pages-artifact@v1
      - name: "Upload Pages artifact"
        uses: actions/upload-pages-artifact@v1
        with:
          # Poiché il working-directory è "docs", ./public = docs/public a livello repo
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Niente download manuale,
      # deploy-pages@v2 recupererà l'artefatto ephemeral automaticamente.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      # Se prima scaricavi manualmente l'artefatto, ora NON serve più:
      #
      # - name: Download build artifact
      #   uses: actions/download-artifact@v4
      #   ...
      #
      # Togli anche eventuali parametri "artifact_name" 
      # se non strettamente richiesti da deploy-pages.
